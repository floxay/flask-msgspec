[project]
name = "flask-msgspec"
authors = [
    {name = "Huba Tuba", email = "hubasolttuba@gmail.com"},
]
version = "1.0.0dev1"
requires-python = ">=3.8,<4.0"
dependencies = [
    "Flask>=2.3.0,<4.0",
    "msgspec>=0.18.5,<1.0",
    "typing-extensions>=4.8.0,<5.0; python_version < \"3.10\"",
]
description = "msgspec integration for Flask"
readme = "README.md"
license = {text = "MIT"}
keywords = [
    "api",
    "http",
    "flask",
    "msgspec",
    "validation"
]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]

[project.urls]
"Issue Tracker" = "https://github.com/floxay/flask-msgspec/issues"
Changelog = "https://github.com/floxay/flask-msgspec/releases"
Repository = "https://github.com/floxay/flask-msgspec"

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
fix = true
target-version = "py38"
line-length = 120
select = ["ALL"]
ignore = [
    "ANN101",
    "ANN102",
    "ANN401",
    "D",
    "E501",
    "PLR2004",
]
src = [
    "flask_msgspec",
    "tests",
    "examples"
]

[tool.ruff.isort]
known-first-party = ["flask_msgspec", "tests", "examples"]

[tool.pdm.dev-dependencies]
lint = [
    "ruff>=0.1.9",
    "mypy>=1.8.0",
    "pyright>=1.1.347",
]
test = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
]

[tool.mypy]
packages = ["flask_msgspec", "tests", "examples"]
python_version = "3.8"
strict = true
warn_unused_ignores = true

[tool.pyright]
include = ["flask_msgspec", "tests", "examples"]
pythonVersion = "3.8"
typeCheckingMode = "strict"
reportUnnecessaryTypeIgnoreComments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.ruff.per-file-ignores]
"tests/*" = [
    "ARG",
    "DTZ",
    "S101"
]
